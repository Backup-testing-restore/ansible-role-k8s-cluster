---

# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
- name: Install prerequisites
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - kmod  # installs modprobe and lsmod
    state: present
    update_cache: yes

- name: Add Kubernetes apt key
  ansible.builtin.apt_key:
    url: "{{ k8s_cluster_apt_key_url }}"
    keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg

- name: Add Kubernetes apt repository
  ansible.builtin.apt_repository:
    repo: "{{ k8s_cluster_apt_repository }}"
    state: present
    #    filename: kubernetes
    update_cache: true

- name: install Kubernetes components
  ansible.builtin.apt:
    name:
      - kubelet={{ kubelet_version }}
      - kubeadm={{ kubeadm_version }}
      - kubectl={{ kubectl_version }}
      - etcd-client={{ etcd_client_version }}
    allow_unauthenticated: yes
    update_cache: yes

- name: Pin versions
  ansible.builtin.dpkg_selections:
    selection: hold
    name: "{{ item }}"
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Load required kernel modules on boot
  ansible.builtin.copy:
    src: modules-load.d_k8s.conf
    dest: "/etc/modules-load.d/k8s.conf"

- name: Load kernel modules
  community.general.modprobe:
    name: "{{ item }}"
  loop:
    - overlay
    - br_netfilter

- name: Configure sysctl
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: '1'
    sysctl_file: /etc/sysctl.d/k8s.conf
    sysctl_set: yes
    state: present
    reload: yes
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables
    - net.ipv4.ip_forward
